openapi: 3.0.3
info:
  title: JackTheVideoRipper
  version: '1.0'
  description: JackTheVideoRipper REST Microservice
servers:
  - url: 'http://localhost:54117'
paths:
  /v1/ping:
    summary: Check for service uptime
    get:
      responses:
        '200':
          $ref: '#/components/schemas/PingResponseSchema'
          description: ''
  /v1/meta:
    post:
      summary: Request meta data on a media url
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaRequestSchema'
      responses:
        '200':
          $ref: '#/components/schemas/MetaResponseSchema'
          description: ''
  /v1/media:
    summary: Media Entity
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaPostRequestSchema'
      responses:
        '200':
          $ref: '#/components/schemas/MediaPostResponseSchema'
          description: ''
  /v1/media/{id}:
    get:
      summary: Download the requested media if it is available
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: mediaId
      responses:
        '200':
          $ref: '#/components/schemas/MediaGetResponseSchema'
          description: ''
  /v1/status/{id}:
    get:
      summary: Get the status of a media request. Is it pending, downloading, or complete?
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: mediaId
      responses:
        '200':
          $ref: '#/components/schemas/MediaStatusResponseSchema'
          description: ''
  /v1/list:
    summary: Media Entity
    get:
      responses:
        '200':
          $ref: '#/components/schemas/MediaListResponseSchema'
          description: ''
components:
  schemas:
    PingResponseSchema:
      type: object
      properties:
        ping:
          description: Static response of 'pong'
          type: string
          example: pong